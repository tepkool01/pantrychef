AWSTemplateFormatVersion: 2010-09-09

Parameters:
  CidrRange:
    Description: "1.1.1.0/16"
    Type: String
    Default: 73.73.0.0/24
  CertificateARN:
    Description: The ARN of the domain certificate
    Type: String
    Default: "arn:aws:acm:us-east-1:878527066650:certificate/1d439dcd-b25b-4ea0-8cbb-eb315c773383"
  APIDomainName:
    Description: The Base URL for the API
    Type: String
    Default: "api.lepantrychef.com"
  DBSecretsArn:
    Description: The secret for the RDS database credentials
    Type: String
    Default: "arn:aws:secretsmanager:us-east-1:878527066650:secret:pantrychefdb-OKx5ZI"
  DBClusterArn:
    Description: This is the ARN for the database cluster
    Type: String
    Default: "arn:aws:rds:us-east-1:878527066650:cluster:pantrychef"
  DBName:
    Description: Name of the database
    Type: String
    Default: "pantryDB"
  DateTime:
    Description: A timestamp to trigger updates
    Type: String
    Default: 1
Resources:
  # Create VPC
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: !Ref CidrRange
      EnableDnsHostnames: false
      EnableDnsSupport: false
      InstanceTenancy: "default"
  Aurora:
    Type: "AWS::RDS::DBCluster"
    Properties:
      DatabaseName: !Ref DBName
      DBClusterIdentifier: "pantryChef"
      # TODO: Use secrets manager!
      MasterUsername: "testusername"
      MasterUserPassword: "testpassword"
      Engine: aurora
      EngineMode: serverless
      Port: 3306
      StorageEncrypted: True

  # This is where all the front-end VueJS content will go
#  StaticContent:
#    Type: AWS::S3::Bucket
#    Properties:
#      AccessControl: PublicRead
#      BucketName: lepantrychef.com
#      WebsiteConfiguration:
#        IndexDocument: index.html
#        ErrorDocument: error.html
#    DeletionPolicy: Retain

  # This is where all the back-end code will live and be referenced by lambdas; also holds the CloudFormation template itself
#  S3Artifacts:
#    Type: AWS::S3::Bucket
#    Properties:
#      BucketName: lepantrychefartifacts
#    DeletionPolicy: Retain

  # Allows all objects in the front-end bucket to have public read access (it is the WWW after all)
#  StaticContentPolicy:
#    Type: AWS::S3::BucketPolicy
#    Properties:
#      Bucket: !Ref StaticContent
#      PolicyDocument:
#        Statement:
#          - Action:
#              - "s3:GetObject"
#            Effect: "Allow"
#            Resource:
#              Fn::Join:
#                - ""
#                - - "arn:aws:s3:::"
#                  - !Ref StaticContent
#                  - "/*"
#            Principal: "*"

  # The meat of the API, note that the integration is ALWAYS 'POST', even if the request method is not. Also connects the lambda to API Gateway
  API:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: "pantry-chef"
      Body:
        Fn::Sub: |
          {
            "swagger": "2.0",
            "info": {
              "version": "1.0.0",
              "title": "pantry-chef"
            },
            "host": "api.lepantrychef.com",
            "basePath": "/",
            "x-amazon-apigateway-request-validators": {
              "all": {
                "validateRequestBody": true,
                "validateRequestParameters": true
              }
            },
            "x-amazon-apigateway-request-validator": "all",
            "schemes": [
              "https"
            ],
            "paths": {
              "/profiles": {
                "get": {
                  "produces": [
                    "application/json"
                  ],
                  "responses": {
                    "200": {
                      "description": "200 response",
                      "schema": {
                        "$ref": "#/definitions/ProfilesResponse"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "400": {
                      "description": "400 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "500": {
                      "description": "500 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ProfilesLambda.Arn}/invocations",
                    "passthroughBehavior": "when_no_match",
                    "httpMethod": "POST",
                    "type": "aws_proxy"
                  },
                  "security": [
                    {
                      "pantrychef_authorizer": []
                    }
                  ]
                },
                "post": {
                  "produces": [
                    "application/json"
                  ],
                  "consumes": [
                    "application/json"
                  ],
                  "responses": {
                    "201": {
                      "description": "201 response",
                      "schema": {
                        "$ref": "#/definitions/ProfileResponse"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "400": {
                      "description": "400 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "500": {
                      "description": "500 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ProfilesLambda.Arn}/invocations",
                    "passthroughBehavior": "when_no_match",
                    "httpMethod": "POST",
                    "type": "aws_proxy"
                  },
                  "security": [
                    {
                      "pantrychef_authorizer": []
                    }
                  ]
                },
                "options": {
                  "consumes": [
                    "application/json"
                  ],
                  "produces": [
                    "application/json"
                  ],
                  "responses": {
                    "200": {
                      "description": "Default CORS response",
                      "headers": {
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "httpMethod": "OPTIONS",
                    "type": "mock",
                    "requestTemplates": {
                      "application/json": "{\"statusCode\": 200}"
                    },
                    "responses": {
                      "default": {
                        "statusCode": "200",
                        "responseParameters": {
                          "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                          "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
                          "method.response.header.Access-Control-Allow-Origin": "'*'"
                        }
                      }
                    }
                  }
                }
              },
              "/profiles/{profileId}": {
                "get": {
                  "produces": [
                    "application/json"
                  ],
                  "parameters": [
                    {
                      "name": "profileId",
                      "in": "path",
                      "description": "profile id",
                      "required": true,
                      "type": "string"
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "200 response",
                      "schema": {
                        "$ref": "#/definitions/ProfileResponse"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "400": {
                      "description": "400 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "500": {
                      "description": "500 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ProfilesLambda.Arn}/invocations",
                    "passthroughBehavior": "when_no_match",
                    "httpMethod": "POST",
                    "type": "aws_proxy"
                  },
                  "security": [
                    {
                      "pantrychef_authorizer": []
                    }
                  ]
                },
                "delete": {
                  "produces": [
                    "application/json"
                  ],
                  "parameters": [
                    {
                      "name": "profileId",
                      "in": "path",
                      "description": "profile id",
                      "required": true,
                      "type": "string"
                    }
                  ],
                  "responses": {
                    "204": {
                      "description": "204 response",
                      "schema": {
                        "$ref": "#/definitions/Empty"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "400": {
                      "description": "400 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "500": {
                      "description": "500 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ProfilesLambda.Arn}/invocations",
                    "passthroughBehavior": "when_no_match",
                    "httpMethod": "POST",
                    "type": "aws_proxy"
                  },
                  "security": [
                    {
                      "pantrychef_authorizer": []
                    }
                  ]
                },
                "patch": {
                  "produces": [
                    "application/json"
                  ],
                  "consumes": [
                    "application/json"
                  ],
                  "parameters": [
                    {
                      "name": "profileId",
                      "in": "path",
                      "description": "profile id",
                      "required": true,
                      "type": "string"
                    }
                  ],
                  "responses": {
                    "201": {
                      "description": "200 response",
                      "schema": {
                        "$ref": "#/definitions/ProfileResponse"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "400": {
                      "description": "400 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "500": {
                      "description": "500 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ProfilesLambda.Arn}/invocations",
                    "passthroughBehavior": "when_no_match",
                    "httpMethod": "POST",
                    "type": "aws_proxy"
                  },
                  "security": [
                    {
                      "pantrychef_authorizer": []
                    }
                  ]
                },
                "put": {
                  "produces": [
                    "application/json"
                  ],
                  "parameters": [
                    {
                      "name": "profileId",
                      "in": "path",
                      "description": "profile id",
                      "required": true,
                      "type": "string"
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "200 response",
                      "schema": {
                        "$ref": "#/definitions/ProfileResponse"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "400": {
                      "description": "400 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "500": {
                      "description": "500 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ProfilesLambda.Arn}/invocations",
                    "passthroughBehavior": "when_no_match",
                    "httpMethod": "POST",
                    "type": "aws_proxy"
                  },
                  "security": [
                    {
                      "pantrychef_authorizer": []
                    }
                  ]
                },
                "options": {
                  "consumes": [
                    "application/json"
                  ],
                  "produces": [
                    "application/json"
                  ],
                  "parameters": [
                    {
                      "name": "profileId",
                      "in": "path",
                      "description": "profile id",
                      "required": true,
                      "type": "string"
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "Default CORS response",
                      "headers": {
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "httpMethod": "OPTIONS",
                    "type": "mock",
                    "requestTemplates": {
                      "application/json": "{\"statusCode\": 200}"
                    },
                    "responses": {
                      "default": {
                        "statusCode": "200",
                        "responseParameters": {
                          "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                          "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
                          "method.response.header.Access-Control-Allow-Origin": "'*'"
                        }
                      }
                    }
                  }
                }
              },
              "/profiles/{profileId}/activate": {
                "put": {
                  "produces": [
                    "application/json"
                  ],
                  "parameters": [
                    {
                      "name": "profileId",
                      "in": "path",
                      "description": "profile id",
                      "required": true,
                      "type": "string"
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "200 response",
                      "schema": {
                        "$ref": "#/definitions/ProfileResponse"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "400": {
                      "description": "400 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "500": {
                      "description": "500 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ProfilesLambda.Arn}/invocations",
                    "passthroughBehavior": "when_no_match",
                    "httpMethod": "POST",
                    "type": "aws_proxy"
                  },
                  "security": [
                    {
                      "pantrychef_authorizer": []
                    }
                  ]
                },
                "options": {
                  "consumes": [
                    "application/json"
                  ],
                  "produces": [
                    "application/json"
                  ],
                  "parameters": [
                    {
                      "name": "profileId",
                      "in": "path",
                      "description": "profile id",
                      "required": true,
                      "type": "string"
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "Default CORS response",
                      "headers": {
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "httpMethod": "OPTIONS",
                    "type": "mock",
                    "requestTemplates": {
                      "application/json": "{\"statusCode\": 200}"
                    },
                    "responses": {
                      "default": {
                        "statusCode": "200",
                        "responseParameters": {
                          "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                          "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
                          "method.response.header.Access-Control-Allow-Origin": "'*'"
                        }
                      }
                    }
                  }
                }
              },
              "/recipes": {
                "get": {
                  "produces": [
                    "application/json"
                  ],
                  "responses": {
                    "200": {
                      "description": "200 response",
                      "schema": {
                        "$ref": "#/definitions/RecipesResponse"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "400": {
                      "description": "400 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "500": {
                      "description": "500 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${RecipesLambda.Arn}/invocations",
                    "passthroughBehavior": "when_no_match",
                    "httpMethod": "POST",
                    "type": "aws_proxy"
                  },
                  "security": [
                    {
                      "pantrychef_authorizer": []
                    }
                  ]
                },
                "options": {
                  "consumes": [
                    "application/json"
                  ],
                  "produces": [
                    "application/json"
                  ],
                  "responses": {
                    "200": {
                      "description": "Default CORS response",
                      "headers": {
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "httpMethod": "OPTIONS",
                    "type": "mock",
                    "requestTemplates": {
                      "application/json": "{\"statusCode\": 200}"
                    },
                    "responses": {
                      "default": {
                        "statusCode": "200",
                        "responseParameters": {
                          "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                          "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
                          "method.response.header.Access-Control-Allow-Origin": "'*'"
                        }
                      }
                    }
                  }
                }
              },
              "/recipes/{recipeId}": {
                "get": {
                  "produces": [
                    "application/json"
                  ],
                  "parameters": [
                    {
                      "name": "recipeId",
                      "in": "path",
                      "description": "recipe id",
                      "required": true,
                      "type": "string"
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "200 response",
                      "schema": {
                        "$ref": "#/definitions/RecipeResponse"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "400": {
                      "description": "400 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "500": {
                      "description": "500 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${RecipesLambda.Arn}/invocations",
                    "passthroughBehavior": "when_no_match",
                    "httpMethod": "POST",
                    "type": "aws_proxy"
                  },
                  "security": [
                    {
                      "pantrychef_authorizer": []
                    }
                  ]
                },
                "options": {
                  "consumes": [
                    "application/json"
                  ],
                  "produces": [
                    "application/json"
                  ],
                  "parameters": [
                    {
                      "name": "recipeId",
                      "in": "path",
                      "description": "recipe id",
                      "required": true,
                      "type": "string"
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "Default CORS response",
                      "headers": {
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "httpMethod": "OPTIONS",
                    "type": "mock",
                    "requestTemplates": {
                      "application/json": "{\"statusCode\": 200}"
                    },
                    "responses": {
                      "default": {
                        "statusCode": "200",
                        "responseParameters": {
                          "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                          "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
                          "method.response.header.Access-Control-Allow-Origin": "'*'"
                        }
                      }
                    }
                  }
                }
              },
              "/recipes/{recipeId}/ingredients": {
                "get": {
                  "produces": [
                    "application/json"
                  ],
                  "parameters": [
                    {
                      "name": "recipeId",
                      "in": "path",
                      "description": "recipe id",
                      "required": true,
                      "type": "string"
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "200 response",
                      "schema": {
                        "$ref": "#/definitions/RecipeResponse"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "400": {
                      "description": "400 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "500": {
                      "description": "500 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${RecipesLambda.Arn}/invocations",
                    "passthroughBehavior": "when_no_match",
                    "httpMethod": "POST",
                    "type": "aws_proxy"
                  },
                  "security": [
                    {
                      "pantrychef_authorizer": []
                    }
                  ]
                },
                "options": {
                  "consumes": [
                    "application/json"
                  ],
                  "produces": [
                    "application/json"
                  ],
                  "parameters": [
                    {
                      "name": "recipeId",
                      "in": "path",
                      "description": "recipe id",
                      "required": true,
                      "type": "string"
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "Default CORS response",
                      "headers": {
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "httpMethod": "OPTIONS",
                    "type": "mock",
                    "requestTemplates": {
                      "application/json": "{\"statusCode\": 200}"
                    },
                    "responses": {
                      "default": {
                        "statusCode": "200",
                        "responseParameters": {
                          "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                          "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
                          "method.response.header.Access-Control-Allow-Origin": "'*'"
                        }
                      }
                    }
                  }
                }
              },
              "/pantry/{profileId}": {
                "get": {
                  "produces": [
                    "application/json"
                  ],
                  "parameters": [
                    {
                      "name": "profileId",
                      "in": "path",
                      "description": "profile id",
                      "required": true,
                      "type": "string"
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "200 response",
                      "schema": {
                        "$ref": "#/definitions/PantryResponse"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "400": {
                      "description": "400 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "500": {
                      "description": "500 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PantryLambda.Arn}/invocations",
                    "passthroughBehavior": "when_no_match",
                    "httpMethod": "GET",
                    "type": "aws_proxy"
                  },
                  "security": [
                    {
                      "pantrychef_authorizer": []
                    }
                  ]
                },
                "delete": {
                  "produces": [
                    "application/json"
                  ],
                  "parameters": [
                    {
                      "name": "profileId",
                      "in": "path",
                      "description": "profile id",
                      "required": true,
                      "type": "string"
                    }
                  ],
                  "responses": {
                    "204": {
                      "description": "204 response",
                      "schema": {
                        "$ref": "#/definitions/Empty"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "400": {
                      "description": "400 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "500": {
                      "description": "500 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PantryLambda.Arn}/invocations",
                    "passthroughBehavior": "when_no_match",
                    "httpMethod": "DELETE",
                    "type": "aws_proxy"
                  },
                  "security": [
                    {
                      "pantrychef_authorizer": []
                    }
                  ]
                },
                "options": {
                  "consumes": [
                    "application/json"
                  ],
                  "produces": [
                    "application/json"
                  ],
                  "parameters": [
                    {
                      "name": "profileId",
                      "in": "path",
                      "description": "profile id",
                      "required": true,
                      "type": "string"
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "Default CORS response",
                      "headers": {
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "httpMethod": "OPTIONS",
                    "type": "mock",
                    "requestTemplates": {
                      "application/json": "{\"statusCode\": 200}"
                    },
                    "responses": {
                      "default": {
                        "statusCode": "200",
                        "responseParameters": {
                         "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                          "method.response.header.Access-Control-Allow-Methods": "'GET,DELETE,OPTIONS'",
                          "method.response.header.Access-Control-Allow-Origin": "'*'"
                        }
                      }
                    }
                  }
                }
              },
              "/pantry/{profileId}/ingredients/{ingredientId}": {
                "get": {
                  "produces": [
                    "application/json"
                  ],
                  "parameters": [
                    {
                      "name": "profileId",
                      "in": "path",
                      "description": "profile id",
                      "required": true,
                      "type": "string"
                    },
                    {
                      "name": "ingredientId",
                      "in": "path",
                      "description": "ingredient id",
                      "required": true,
                      "type": "string"
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "200 response",
                      "schema": {
                        "$ref": "#/definitions/PantryItemResponse"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "400": {
                      "description": "400 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "500": {
                      "description": "500 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PantryLambda.Arn}/invocations",
                    "passthroughBehavior": "when_no_match",
                    "httpMethod": "GET",
                    "type": "aws_proxy"
                  },
                  "security": [
                    {
                      "pantrychef_authorizer": []
                    }
                  ]
                },
                "put": {
                  "produces": [
                    "application/json"
                  ],
                  "parameters": [
                    {
                      "name": "profileId",
                      "in": "path",
                      "description": "profile id",
                      "required": true,
                      "type": "string"
                    },
                    {
                      "name": "ingredientId",
                      "in": "path",
                      "description": "ingredient id",
                      "required": true,
                      "type": "string"
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "200 response",
                      "schema": {
                        "$ref": "#/definitions/PantryItemResponse"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "400": {
                      "description": "400 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "500": {
                      "description": "500 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PantryLambda.Arn}/invocations",
                    "passthroughBehavior": "when_no_match",
                    "httpMethod": "PUT",
                    "type": "aws_proxy"
                  },
                  "security": [
                    {
                      "pantrychef_authorizer": []
                    }
                  ]
                },
                "delete": {
                  "produces": [
                    "application/json"
                  ],
                  "parameters": [
                    {
                      "name": "profileId",
                      "in": "path",
                      "description": "profile id",
                      "required": true,
                      "type": "string"
                    },
                    {
                      "name": "ingredientId",
                      "in": "path",
                      "description": "ingredient id",
                      "required": true,
                      "type": "string"
                    }
                  ],
                  "responses": {
                    "204": {
                      "description": "204 response",
                      "schema": {
                        "$ref": "#/definitions/Empty"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "400": {
                      "description": "400 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "500": {
                      "description": "500 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PantryLambda.Arn}/invocations",
                    "passthroughBehavior": "when_no_match",
                    "httpMethod": "DELETE",
                    "type": "aws_proxy"
                  },
                  "security": [
                    {
                      "pantrychef_authorizer": []
                    }
                  ]
                },
                "options": {
                  "consumes": [
                    "application/json"
                  ],
                  "produces": [
                    "application/json"
                  ],
                  "parameters": [
                    {
                      "name": "profileId",
                      "in": "path",
                      "description": "profile id",
                      "required": true,
                      "type": "string"
                    },
                    {
                      "name": "ingredientId",
                      "in": "path",
                      "description": "ingredient id",
                      "required": true,
                      "type": "string"
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "Default CORS response",
                      "headers": {
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "httpMethod": "OPTIONS",
                    "type": "mock",
                    "requestTemplates": {
                      "application/json": "{\"statusCode\": 200}"
                    },
                    "responses": {
                      "default": {
                        "statusCode": "200",
                        "responseParameters": {
                          "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                          "method.response.header.Access-Control-Allow-Methods": "'GET,PUT,DELETE,OPTIONS'",
                          "method.response.header.Access-Control-Allow-Origin": "'*'"
                        }
                      }
                    }
                  }
                }
              },
              "/shopping-lists/{profileId}": {
                "get": {
                  "produces": [
                    "application/json"
                  ],
                  "parameters": [
                    {
                      "name": "profileId",
                      "in": "path",
                      "description": "profile id",
                      "required": true,
                      "type": "string"
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "200 response",
                      "schema": {
                        "$ref": "#/definitions/ShoppingListResponse"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "400": {
                      "description": "400 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "500": {
                      "description": "500 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ShoppingListLambda.Arn}/invocations",
                    "passthroughBehavior": "when_no_match",
                    "httpMethod": "GET",
                    "type": "aws_proxy"
                  },
                  "security": [
                    {
                      "pantrychef_authorizer": []
                    }
                  ]
                },
                "delete": {
                  "produces": [
                    "application/json"
                  ],
                  "parameters": [
                    {
                      "name": "profileId",
                      "in": "path",
                      "description": "profile id",
                      "required": true,
                      "type": "string"
                    }
                  ],
                  "responses": {
                    "204": {
                      "description": "204 response",
                      "schema": {
                        "$ref": "#/definitions/Empty"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "400": {
                      "description": "400 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "500": {
                      "description": "500 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ShoppingListLambda.Arn}/invocations",
                    "passthroughBehavior": "when_no_match",
                    "httpMethod": "DELETE",
                    "type": "aws_proxy"
                  },
                  "security": [
                    {
                      "pantrychef_authorizer": []
                    }
                  ]
                },
                "options": {
                  "consumes": [
                    "application/json"
                  ],
                  "produces": [
                    "application/json"
                  ],
                  "parameters": [
                    {
                      "name": "profileId",
                      "in": "path",
                      "description": "profile id",
                      "required": true,
                      "type": "string"
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "Default CORS response",
                      "headers": {
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "httpMethod": "OPTIONS",
                    "type": "mock",
                    "requestTemplates": {
                      "application/json": "{\"statusCode\": 200}"
                    },
                    "responses": {
                      "default": {
                        "statusCode": "200",
                        "responseParameters": {
                         "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                          "method.response.header.Access-Control-Allow-Methods": "'GET,DELETE,OPTIONS'",
                          "method.response.header.Access-Control-Allow-Origin": "'*'"
                        }
                      }
                    }
                  }
                }
              },
              "/shopping-lists/{profileId}/ingredients/{ingredientId}": {
                "get": {
                  "produces": [
                    "application/json"
                  ],
                  "parameters": [
                    {
                      "name": "profileId",
                      "in": "path",
                      "description": "profile id",
                      "required": true,
                      "type": "string"
                    },
                    {
                      "name": "ingredientId",
                      "in": "path",
                      "description": "ingredient id",
                      "required": true,
                      "type": "string"
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "200 response",
                      "schema": {
                        "$ref": "#/definitions/ShoppingListItemResponse"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "400": {
                      "description": "400 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "500": {
                      "description": "500 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ShoppingListLambda.Arn}/invocations",
                    "passthroughBehavior": "when_no_match",
                    "httpMethod": "GET",
                    "type": "aws_proxy"
                  },
                  "security": [
                    {
                      "pantrychef_authorizer": []
                    }
                  ]
                },
                "put": {
                  "produces": [
                    "application/json"
                  ],
                  "parameters": [
                    {
                      "name": "profileId",
                      "in": "path",
                      "description": "profile id",
                      "required": true,
                      "type": "string"
                    },
                    {
                      "name": "ingredientId",
                      "in": "path",
                      "description": "ingredient id",
                      "required": true,
                      "type": "string"
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "200 response",
                      "schema": {
                        "$ref": "#/definitions/ShoppingListItemResponse"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "400": {
                      "description": "400 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "500": {
                      "description": "500 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ShoppingListLambda.Arn}/invocations",
                    "passthroughBehavior": "when_no_match",
                    "httpMethod": "PUT",
                    "type": "aws_proxy"
                  },
                  "security": [
                    {
                      "pantrychef_authorizer": []
                    }
                  ]
                },
                "delete": {
                  "produces": [
                    "application/json"
                  ],
                  "parameters": [
                    {
                      "name": "profileId",
                      "in": "path",
                      "description": "profile id",
                      "required": true,
                      "type": "string"
                    },
                    {
                      "name": "ingredientId",
                      "in": "path",
                      "description": "ingredient id",
                      "required": true,
                      "type": "string"
                    }
                  ],
                  "responses": {
                    "204": {
                      "description": "204 response",
                      "schema": {
                        "$ref": "#/definitions/Empty"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "400": {
                      "description": "400 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "500": {
                      "description": "500 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ShoppingListLambda.Arn}/invocations",
                    "passthroughBehavior": "when_no_match",
                    "httpMethod": "DELETE",
                    "type": "aws_proxy"
                  },
                  "security": [
                    {
                      "pantrychef_authorizer": []
                    }
                  ]
                },
                "options": {
                  "consumes": [
                    "application/json"
                  ],
                  "produces": [
                    "application/json"
                  ],
                  "parameters": [
                    {
                      "name": "profileId",
                      "in": "path",
                      "description": "profile id",
                      "required": true,
                      "type": "string"
                    },
                    {
                      "name": "ingredientId",
                      "in": "path",
                      "description": "ingredient id",
                      "required": true,
                      "type": "string"
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "Default CORS response",
                      "headers": {
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "httpMethod": "OPTIONS",
                    "type": "mock",
                    "requestTemplates": {
                      "application/json": "{\"statusCode\": 200}"
                    },
                    "responses": {
                      "default": {
                        "statusCode": "200",
                        "responseParameters": {
                          "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                          "method.response.header.Access-Control-Allow-Methods": "'GET,PUT,DELETE,OPTIONS'",
                          "method.response.header.Access-Control-Allow-Origin": "'*'"
                        }
                      }
                    }
                  }
                }
              },
              "/ingredients": {
                "get": {
                  "produces": [
                    "application/json"
                  ],
                  "responses": {
                    "200": {
                      "description": "200 response",
                      "schema": {
                        "$ref": "#/definitions/IngredientsResponse"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "400": {
                      "description": "400 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "500": {
                      "description": "500 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${IngredientsLambda.Arn}/invocations",
                    "passthroughBehavior": "when_no_match",
                    "httpMethod": "POST",
                    "type": "aws_proxy"
                  },
                  "security": [
                    {
                      "pantrychef_authorizer": []
                    }
                  ]
                },
                "options": {
                  "consumes": [
                    "application/json"
                  ],
                  "produces": [
                    "application/json"
                  ],
                  "responses": {
                    "200": {
                      "description": "Default CORS response",
                      "headers": {
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "httpMethod": "OPTIONS",
                    "type": "mock",
                    "requestTemplates": {
                      "application/json": "{\"statusCode\": 200}"
                    },
                    "responses": {
                      "default": {
                        "statusCode": "200",
                        "responseParameters": {
                          "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                          "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
                          "method.response.header.Access-Control-Allow-Origin": "'*'"
                        }
                      }
                    }
                  }
                }
              },
              "/ingredients/{ingredientId}": {
                "get": {
                  "produces": [
                    "application/json"
                  ],
                  "parameters": [
                    {
                      "name": "ingredientId",
                      "in": "path",
                      "description": "ingredient id",
                      "required": true,
                      "type": "string"
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "200 response",
                      "schema": {
                        "$ref": "#/definitions/IngredientResponse"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "400": {
                      "description": "400 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "500": {
                      "description": "500 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${IngredientsLambda.Arn}/invocations",
                    "passthroughBehavior": "when_no_match",
                    "httpMethod": "POST",
                    "type": "aws_proxy"
                  },
                  "security": [
                    {
                      "pantrychef_authorizer": []
                    }
                  ]
                },
                "options": {
                  "consumes": [
                    "application/json"
                  ],
                  "produces": [
                    "application/json"
                  ],
                  "parameters": [
                    {
                      "name": "ingredientId",
                      "in": "path",
                      "description": "ingredient id",
                      "required": true,
                      "type": "string"
                    }
                  ],
                  "responses": {
                    "200": {
                      "description": "Default CORS response",
                      "headers": {
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "httpMethod": "OPTIONS",
                    "type": "mock",
                    "requestTemplates": {
                      "application/json": "{\"statusCode\": 200}"
                    },
                    "responses": {
                      "default": {
                        "statusCode": "200",
                        "responseParameters": {
                          "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                          "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
                          "method.response.header.Access-Control-Allow-Origin": "'*'"
                        }
                      }
                    }
                  }
                }
              },
              "/user": {
                "get": {
                  "produces": [
                    "application/json"
                  ],
                  "responses": {
                    "200": {
                      "description": "200 response",
                      "schema": {
                        "$ref": "#/definitions/UserResponse"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "400": {
                      "description": "400 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "500": {
                      "description": "500 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UserLambda.Arn}/invocations",
                    "passthroughBehavior": "when_no_match",
                    "httpMethod": "POST",
                    "type": "aws_proxy"
                  },
                  "security": [
                    {
                      "pantrychef_authorizer": []
                    }
                  ]
                },
                "patch": {
                  "produces": [
                    "application/json"
                  ],
                  "consumes": [
                    "application/json"
                  ],
                  "responses": {
                    "200": {
                      "description": "200 response",
                      "schema": {
                        "$ref": "#/definitions/UserResponse"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "400": {
                      "description": "400 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    },
                    "500": {
                      "description": "500 response",
                      "schema": {
                        "$ref": "#/definitions/Error"
                      },
                      "headers": {
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "uri": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${UserLambda.Arn}/invocations",
                    "passthroughBehavior": "when_no_match",
                    "httpMethod": "POST",
                    "type": "aws_proxy"
                  },
                  "security": [
                    {
                      "pantrychef_authorizer": []
                    }
                  ]
                },
                "options": {
                  "consumes": [
                    "application/json"
                  ],
                  "produces": [
                    "application/json"
                  ],
                  "responses": {
                    "200": {
                      "description": "Default CORS response",
                      "headers": {
                        "Access-Control-Allow-Headers": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Methods": {
                          "type": "string"
                        },
                        "Access-Control-Allow-Origin": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "x-amazon-apigateway-integration": {
                    "httpMethod": "OPTIONS",
                    "type": "mock",
                    "requestTemplates": {
                      "application/json": "{\"statusCode\": 200}"
                    },
                    "responses": {
                      "default": {
                        "statusCode": "200",
                        "responseParameters": {
                          "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'",
                          "method.response.header.Access-Control-Allow-Methods": "'POST,OPTIONS'",
                          "method.response.header.Access-Control-Allow-Origin": "'*'"
                        }
                      }
                    }
                  }
                }
              }
            },
            "securityDefinitions": {
              "pantrychef_authorizer": {
                "type": "apiKey",
                "name": "Authorization",
                "in": "header",
                "x-amazon-apigateway-authtype": "cognito_user_pools",
                "x-amazon-apigateway-authorizer": {
                  "type": "cognito_user_pools",
                  "providerARNs": [
                    "arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${CognitoUserPool}"
                  ]
                }
              }
            },
            "definitions": {
              "UserResponse": {
                "type": "object",
                "title": "Shopping List Response"
              },
              "ShoppingListResponse": {
                "type": "object",
                "title": "Shopping List Response"
              },
              "PantryResponse": {
                "type": "object",
                "title": "Pantry Response"
              },
              "ProfilesResponse": {
                "type": "object",
                "title": "Profiles Response"
              },
              "ProfileResponse": {
                "type": "object",
                "title": "Profiles Response"
              },
              "RecipesResponse": {
                "type": "object",
                "title": "Recipes Response"
              },
              "RecipeResponse": {
                "type": "object",
                "title": "Recipe Response"
              },
              "PantryItemResponse": {
                "type": "object",
                "title": "Pantry Item Response"
              },
              "ShoppingListItemResponse": {
                "type": "object",
                "title": "ShoppingList Item Response"
              },
              "IngredientsResponse": {
                "type": "object",
                "title": "Ingredients Response"
              },
              "IngredientResponse": {
                "type": "object",
                "title": "Ingredient Response"
              },
              "Empty": {
                "type": "object",
                "title": "Empty Response"
              },
              "Error": {
                "type": "object",
                "properties": {
                  "error": {
                    "type": "string"
                  }
                },
                "title": "Error Schema"
              }
            }
          }

  # This is a preliminary step for the stage, it's silly, but required.
  APIDeploy:
    Type: "AWS::ApiGateway::Deployment"
    Properties:
      RestApiId: !Ref API

  # This deployment stage makes the API visible to the web
  APIStage:
    DependsOn: APIDeploy
    Type: "AWS::ApiGateway::Stage"
    Properties:
      DeploymentId: !Ref APIDeploy
      RestApiId: !Ref API

  DomainName:
    Type: "AWS::ApiGateway::DomainName"
    Properties:
      CertificateArn: !Ref CertificateARN
      DomainName: !Ref APIDomainName

  Mapping:
    Type: "AWS::ApiGateway::BasePathMapping"
    Properties:
      DomainName: !Ref DomainName
      RestApiId: !Ref API
      Stage: !Ref APIStage

  ###
  # PROFILE LAMBDA
  ###
  ProfilesLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: "pc-profile"
      Code:
        S3Bucket: "lepantrychefartifacts"
        S3Key: "profiles.zip"
      Handler: index.lambda_handler
      Runtime: python3.7
      Role: !GetAtt GenericLambdaRole.Arn
      MemorySize: 512
      Timeout: 15
      Environment:
        Variables:
          DB_NAME: !Ref DBName
          RDS_ARN: !Ref DBClusterArn
          Secrets_ARN: !Ref DBSecretsArn
          Cognito_Pool_ID: !Ref CognitoUserPool
  ###
  # PANTRY LAMBDA
  ###
  PantryLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: "pc-pantry"
      Code:
        S3Bucket: "lepantrychefartifacts"
        S3Key: "pantry.zip"
      Handler: index.lambda_handler
      Runtime: python3.7
      Role: !GetAtt GenericLambdaRole.Arn
      MemorySize: 512
      Timeout: 15
      Environment:
        Variables:
          DB_NAME: !Ref DBName
          RDS_ARN: !Ref DBClusterArn
          Secrets_ARN: !Ref DBSecretsArn
          Cognito_Pool_ID: !Ref CognitoUserPool

  ###
  # User LAMBDA
  ###
  UserLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: "pc-user"
      Code:
        S3Bucket: "lepantrychefartifacts"
        S3Key: "user.zip"
      Handler: index.lambda_handler
      Runtime: python3.7
      Role: !GetAtt GenericLambdaRole.Arn
      MemorySize: 512
      Timeout: 15
      Environment:
        Variables:
          DB_NAME: !Ref DBName
          RDS_ARN: !Ref DBClusterArn
          Secrets_ARN: !Ref DBSecretsArn
          Cognito_Pool_ID: !Ref CognitoUserPool

  ###
  # SHOPPINGLIST LAMBDA
  ###
  ShoppingListLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: "pc-shopping-list"
      Code:
        S3Bucket: "lepantrychefartifacts"
        S3Key: "shopping-list.zip"
      Handler: index.lambda_handler
      Runtime: python3.7
      Role: !GetAtt GenericLambdaRole.Arn
      MemorySize: 512
      Timeout: 15
      Environment:
        Variables:
          DB_NAME: !Ref DBName
          RDS_ARN: !Ref DBClusterArn
          Secrets_ARN: !Ref DBSecretsArn
          Cognito_Pool_ID: !Ref CognitoUserPool

  # This is the access permission we give to the Lambda, in this case, it can pretty much do logging (in real cases, you'd probably want to give database access, etc)
  GenericLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: LambdaLogging
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "logs:*"
                Resource: "*"
        - PolicyName: SecretsManagerAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "secretsmanager:GetSecretValue"
                Resource: "arn:aws:secretsmanager:us-east-1:878527066650:secret:pantrychefdb-OKx5ZI"
        - PolicyName: DatabaseAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "rds-data:*"
                Resource: "*"

  # This provides API Gateway access to invoke this lambda
  ProfilesLambdaInvoke:
    DependsOn: API
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !GetAtt ProfilesLambda.Arn
      Principal: "apigateway.amazonaws.com"
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${API}/"

  ###
  # RECIPE LAMBDA
  ###
  RecipesLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: "pc-recipe"
      Code:
        S3Bucket: "lepantrychefartifacts"
        S3Key: "recipes.zip"
      Handler: index.lambda_handler
      Runtime: python3.7
      Role: !GetAtt GenericLambdaRole.Arn
      MemorySize: 512
      Timeout: 15
      Environment:
        Variables:
          DB_Name: !Ref DBName
          RDS_ARN: !Ref DBClusterArn
          Secrets_ARN: !Ref DBSecretsArn
          Cognito_Pool_ID: !Ref CognitoUserPool

  RecipesLambdaInvoke:
    DependsOn: API
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !GetAtt RecipesLambda.Arn
      Principal: "apigateway.amazonaws.com"
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${API}/*"

  ###
  # INGREDIENT LAMBDA
  ###
  IngredientsLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: "pc-ingredient"
      Code:
        S3Bucket: "lepantrychefartifacts"
        S3Key: "ingredients.zip"
      Handler: index.lambda_handler
      Runtime: python3.7
      Role: !GetAtt GenericLambdaRole.Arn
      MemorySize: 512
      Timeout: 15
      Environment:
        Variables:
          DB_Name: !Ref DBName
          RDS_ARN: !Ref DBClusterArn
          Secrets_ARN: !Ref DBSecretsArn
          Cognito_Pool_ID: !Ref CognitoUserPool

  IngredientsLambdaInvoke:
    DependsOn: API
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !GetAtt IngredientsLambda.Arn
      Principal: "apigateway.amazonaws.com"
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${API}/*"

  PantryLambdaInvoke:
    DependsOn: API
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !GetAtt PantryLambda.Arn
      Principal: "apigateway.amazonaws.com"
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${API}/*"

  UserLambdaInvoke:
    DependsOn: API
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !GetAtt UserLambda.Arn
      Principal: "apigateway.amazonaws.com"
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${API}/*"

  ShoppingListLambdaInvoke:
    DependsOn: API
    Type: "AWS::Lambda::Permission"
    Properties:
      Action: "lambda:InvokeFunction"
      FunctionName: !GetAtt ShoppingListLambda.Arn
      Principal: "apigateway.amazonaws.com"
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${API}/*"

  ###
  # NEW USER LAMBDA (TRIGGER)
  ###
  NewUserLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: "pc-new-user"
      Code:
        S3Bucket: "lepantrychefartifacts"
        S3Key: "new-user.zip"
      Handler: index.lambda_handler
      Runtime: python3.7
      Role: !GetAtt GenericLambdaRole.Arn
      MemorySize: 512
      Timeout: 15
      Environment:
        Variables:
          DB_Name: !Ref DBName
          RDS_ARN: !Ref DBClusterArn
          Secrets_ARN: !Ref DBSecretsArn
  # Adds ability for cognito to invoke the above lambda
  UserPoolLambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:invokeFunction
      Principal: cognito-idp.amazonaws.com
      FunctionName: !Ref NewUserLambda
      SourceArn: !Sub "arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/*"

  # Holds all of our users
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Name: "verified_email"
            Priority: 1
      AliasAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      EmailConfiguration:
        EmailSendingAccount: "DEVELOPER"
        From: "LePantryChef <no-reply@lepantrychef.com>"
        ReplyToEmailAddress: "no-reply@lepantrychef.com"
        SourceArn: "arn:aws:ses:us-east-1:878527066650:identity/no-reply@lepantrychef.com"
      VerificationMessageTemplate:
        DefaultEmailOption: "CONFIRM_WITH_LINK"
        EmailMessageByLink: "Please click the link below to verify your email address. {##Verify Email##}"
        EmailSubjectByLink: "Le Pantry Chef Verification"
      LambdaConfig:
        PostConfirmation: !GetAtt NewUserLambda.Arn
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: false
          RequireUppercase: true
          TemporaryPasswordValidityDays: 7
      Schema:
        - Name: email
          AttributeDataType: String
          Mutable: true
          Required: true
      UserPoolName: "le-pantry-chef"
  CognitoClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      SupportedIdentityProviders:
        - COGNITO
      UserPoolId: !Ref CognitoUserPool
  CognitoCustomDomainRegistration:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      CustomDomainConfig:
        CertificateArn: "arn:aws:acm:us-east-1:878527066650:certificate/1d439dcd-b25b-4ea0-8cbb-eb315c773383"
      Domain: "registration.lepantrychef.com"
      UserPoolId: !Ref CognitoUserPool
Outputs:
  UserPoolDomain:
    Description: "Domain output for cognito"
    Value: !Ref CognitoCustomDomainRegistration
  ### CLOUDFORMER CFT Creation Resources, in case things go really bad, for reference
#  zonelepantrychefcom:
#    Type: AWS::Route53::HostedZone
#    Properties:
#      Name: lepantrychef.com.
#    dnslepantrychefcom:
#      Type: AWS::Route53::RecordSetGroup
#      Properties:
#        HostedZoneId:
#          Ref: zonelepantrychefcom
#        RecordSets:
#          - Name: lepantrychef.com.
#            Type: TXT
#            TTL: '300'
#            ResourceRecords:
#              - '"v=spf1 include:amazonses.com ~all"'
#    dnsamazonseslepantrychefcom:
#      Type: AWS::Route53::RecordSetGroup
#      Properties:
#        HostedZoneId:
#          Ref: zonelepantrychefcom
#        RecordSets:
#          - Name: _amazonses.lepantrychef.com.
#            Type: TXT
#            TTL: '1800'
#            ResourceRecords:
#              - '"A7RWJpJmSh8frtHFpl9tQvVr00tJEtggRkPzqWfGxes="'
#    dnsdmarclepantrychefcom:
#      Type: AWS::Route53::RecordSetGroup
#      Properties:
#        HostedZoneId:
#          Ref: zonelepantrychefcom
#        RecordSets:
#          - Name: _dmarc.lepantrychef.com.
#            Type: TXT
#            TTL: '300'
#            ResourceRecords:
#              - '"v=DMARC1;p=quarantine;pct=100;fo=1"'
#    dns2sp5cf4zkouhvjpyey6gwtdxttlqpsgmdomainkeylepantrychefcom:
#      Type: AWS::Route53::RecordSetGroup
#      Properties:
#        HostedZoneId:
#          Ref: zonelepantrychefcom
#        RecordSets:
#          - Name: 2sp5cf4zkouhvjpyey6gwtdxttlqpsgm._domainkey.lepantrychef.com.
#            Type: CNAME
#            TTL: '1800'
#            ResourceRecords:
#              - 2sp5cf4zkouhvjpyey6gwtdxttlqpsgm.dkim.amazonses.com
#    dnsrcm46vhtsl6oivhfprkauut73oc3ebzedomainkeylepantrychefcom:
#      Type: AWS::Route53::RecordSetGroup
#      Properties:
#        HostedZoneId:
#          Ref: zonelepantrychefcom
#        RecordSets:
#          - Name: rcm46vhtsl6oivhfprkauut73oc3ebze._domainkey.lepantrychef.com.
#            Type: CNAME
#            TTL: '1800'
#            ResourceRecords:
#              - rcm46vhtsl6oivhfprkauut73oc3ebze.dkim.amazonses.com
#    dnsv7llwno7zwsgagss4feiqjbod4tk6wsodomainkeylepantrychefcom:
#      Type: AWS::Route53::RecordSetGroup
#      Properties:
#        HostedZoneId:
#          Ref: zonelepantrychefcom
#        RecordSets:
#          - Name: v7llwno7zwsgagss4feiqjbod4tk6wso._domainkey.lepantrychef.com.
#            Type: CNAME
#            TTL: '1800'
#            ResourceRecords:
#              - v7llwno7zwsgagss4feiqjbod4tk6wso.dkim.amazonses.com
#    dnsapilepantrychefcom:
#      Type: AWS::Route53::RecordSetGroup
#      Properties:
#        HostedZoneId:
#          Ref: zonelepantrychefcom
#        RecordSets:
#          - Name: api.lepantrychef.com.
#            Type: A
#            AliasTarget:
#              HostedZoneId: Z2FDTNDATAQYW2
#              DNSName: djlyv20vcuxvy.cloudfront.net
#    dnsautodiscoverlepantrychefcom:
#      Type: AWS::Route53::RecordSetGroup
#      Properties:
#        HostedZoneId:
#          Ref: zonelepantrychefcom
#        RecordSets:
#          - Name: autodiscover.lepantrychef.com.
#            Type: CNAME
#            TTL: '300'
#            ResourceRecords:
#              - autodiscover.mail.us-east-1.awsapps.com.
#    dnsregisterlepantrychefcom:
#      Type: AWS::Route53::RecordSetGroup
#      Properties:
#        HostedZoneId:
#          Ref: zonelepantrychefcom
#        RecordSets:
#          - Name: register.lepantrychef.com.
#            Type: A
#            AliasTarget:
#              HostedZoneId: Z2FDTNDATAQYW2
#              DNSName: d3fc2yd1wl3gzr.cloudfront.net
#    distd2vld8buvx6b4vcloudfrontnet:
#      Type: AWS::CloudFront::Distribution
#      Properties:
#        DistributionConfig:
#          Aliases:
#            - lepantrychef.com
#            - www.lepantrychef.com
#          Enabled: true
#          PriceClass: PriceClass_All
#          CustomErrorResponses:
#            - ErrorCachingMinTTL: 300
#              ErrorCode: 403
#              ResponseCode: '200'
#              ResponsePagePath:
#            - ErrorCachingMinTTL: 300
#              ErrorCode: 404
#              ResponseCode: '200'
#              ResponsePagePath:
#          DefaultCacheBehavior:
#            TargetOriginId: S3-Website-lepantrychef.com.s3-website-us-east-1.amazonaws.com
#            ViewerProtocolPolicy: redirect-to-https
#            MinTTL: 0
#            AllowedMethods:
#              - HEAD
#              - DELETE
#              - POST
#              - GET
#              - OPTIONS
#              - PUT
#              - PATCH
#            CachedMethods:
#              - HEAD
#              - GET
#              - OPTIONS
#            ForwardedValues:
#              Cookies:
#                Forward: none
#          Origins:
#            - DomainName: lepantrychef.com.s3-website-us-east-1.amazonaws.com
#              Id: S3-Website-lepantrychef.com.s3-website-us-east-1.amazonaws.com
#              S3OriginConfig:
#                HTTPPort: '80'
#                HTTPSPort: '443'
#                OriginProtocolPolicy: http-only
#          Restrictions:
#            GeoRestriction:
#              RestrictionType: none
#              Locations: []
#          ViewerCertificate:
#            SslSupportMethod: sni-only
#            MinimumProtocolVersion: TLSv1.1_2016
#    s3lepantrychefcom:
#      Type: AWS::S3::Bucket
#      Properties:
#        WebsiteConfiguration:
#          IndexDocument: index.html
#          ErrorDocument: error.html
#        AccessControl: PublicRead
#        VersioningConfiguration:
#          Status: Suspended
#    s3lepantrychefartifacts:
#      Type: AWS::S3::Bucket
#      Properties:
#        AccessControl: Private
#        VersioningConfiguration:
#          Status: Suspended
#    s3policylepantrychefcom:
#      Type: AWS::S3::BucketPolicy
#      Properties:
#        Bucket:
#          Ref: s3lepantrychefcom
#        PolicyDocument:
#          Version: '2008-10-17'
#          Statement:
#            - Effect: Allow
#              Principal: "*"
#              Action: s3:GetObject
#              Resource:
#                Fn::Join:
#                  - ''
#                  - - 'arn:aws:s3:::'
#                    - lepantrychef
#                    - ".com/*"
#  Description: ''
